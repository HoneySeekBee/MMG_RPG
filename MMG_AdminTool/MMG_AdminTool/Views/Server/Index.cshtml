@model List<MMG_AdminTool.Models.ServerStatusViewModel>

@{
    ViewData["Title"] = "Server 관리";
}
<h1>서버 관리 페이지</h1>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>서버명</th>
            <th>포트</th>
            <th>상태</th>
            <th>접속자 수</th>
            <th>액션</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var s in Model)
        {
            bool unknown = s.Status == "Unknown";
            <tr>
                <td>@s.Name</td>
                <td>@s.Port</td>
                <td>@s.Status</td>
                <td>@s.ConnectedClients</td>
                <td>
                    <form method="post" asp-action="Start" asp-route-name="@s.Name" style="display:inline;">
                        <button type="submit" class="btn btn-sm btn-success" @(unknown ? "disabled" : "")>실행</button>
                    </form>
                    <form method="post" asp-action="Stop" asp-route-name="@s.Name" style="display:inline;">
                        <button type="submit" class="btn btn-sm btn-danger" @(unknown ? "disabled" : "")>종료</button>
                    </form>
                    @if (s.Name == "API" || s.Name == "Main" || s.Name == "Chat")
                    {
                        <button class="btn btn-sm btn-primary" onclick="openLogModal('@s.Name')">상세</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- 로그 모달 -->
<div class="modal fade" id="logModal" tabindex="-1" aria-labelledby="logModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="logModalLabel">서버 로그</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
            </div>
            <div class="modal-body" style="max-height:500px; overflow-y:auto;">
                <table class="table table-sm table-striped" id="logTable">
                    <thead>
                        <tr>
                            <th>시간</th>
                            <th>Method</th>
                            <th>Path</th>
                            <th>IP</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- JS로 채워짐 -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        let logInterval = null;
        let currentServer = null;

        function openLogModal(serverName) {
            currentServer = serverName;
            loadLogs(); // 첫 로드
            var modal = new bootstrap.Modal(document.getElementById('logModal'));
            modal.show();

            // 3초마다 새 로그 갱신
            logInterval = setInterval(loadLogs, 3000);

            // 모달 닫힐 때 interval 정리
            document.getElementById('logModal').addEventListener('hidden.bs.modal', () => {
                clearInterval(logInterval);
                logInterval = null;
            }, { once: true });
        }

        function loadLogs() {
            if (!currentServer) return;

            let url = "";
            if (currentServer === "API") {
                url = `/Server/GetAPILog?name=${currentServer}`;
            }
            else if (currentServer === "Main") {
                url = `/Server/GetMainLog?name=${currentServer}`;
            }
            else if (currentServer === "Chat") {
                // Chat 로그는 방 번호와 날짜 필요
                const today = new Date().toISOString().split('T')[0]; // yyyy-MM-dd
                const roomId = 1; // 나중에 UI에서 선택하게
                url = `/Server/GetChatLogs?roomId=${roomId}&date=${today}`;
            }

            fetch(url)
                .then(r => r.json())
                .then(data => {
                    if (data.error) {
                        alert(data.error);
                        return;
                    }

                    const tbody = document.querySelector('#logTable tbody');
                    const thead = document.querySelector('#logTable thead tr');
                    tbody.innerHTML = '';

                    if (currentServer === "API") {
                        thead.innerHTML = `
                                    <th>시간</th>
                                    <th>Method</th>
                                    <th>Path</th>
                                    <th>IP</th>
                                `;
                        data.forEach(log => {
                            const row = `<tr>
                                        <td>${new Date(log.time).toLocaleString()}</td>
                                        <td>${log.method}</td>
                                        <td>${log.path}</td>
                                        <td>${log.ip}</td>
                                    </tr>`;
                            tbody.innerHTML += row;
                        });
                    }
                    else if (currentServer === "Main") {
                        thead.innerHTML = `
                                    <th>시간</th>
                                    <th>메시지</th>
                                `;
                        data.forEach(log => {
                            const row = `<tr>
                                        <td>${new Date(log.time).toLocaleString()}</td>
                                        <td>${log.message}</td>
                                    </tr>`;
                            tbody.innerHTML += row;
                        });
                    }
                    else if (currentServer === "Chat") {
                        thead.innerHTML = `
                                    <th>시간</th>
                                    <th>CharId</th>
                                    <th>닉네임</th>
                                    <th>메시지</th>
                                `;
                        data.forEach(log => {
                            const row = `<tr>
                                        <td>${new Date(log.time).toLocaleString()}</td>
                                        <td>${log.charId}</td>
                                        <td>${log.nickname}</td>
                                        <td>${log.message}</td>
                                    </tr>`;
                            tbody.innerHTML += row;
                        });
                    }
                });
        }

    </script>
}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
