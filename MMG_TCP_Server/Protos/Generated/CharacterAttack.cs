// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CharacterAttack.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Packet {

  /// <summary>Holder for reflection information generated from CharacterAttack.proto</summary>
  public static partial class CharacterAttackReflection {

    #region Descriptor
    /// <summary>File descriptor for CharacterAttack.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CharacterAttackReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVDaGFyYWN0ZXJBdHRhY2sucHJvdG8SBlBhY2tldCKCAQoPQ19BdHRhY2tS",
            "ZXF1ZXN0EhIKCkF0dGFja2VySWQYASABKAUSDAoEUG9zWBgCIAEoAhIMCgRQ",
            "b3NZGAMgASgCEgwKBFBvc1oYBCABKAISDAoERGlyWRgFIAEoAhIQCghBdHRh",
            "Y2tJZBgGIAEoBRIRCglUaW1lU3RhbXAYByABKAIiSQoRU19EYW1hZ2VCcm9h",
            "ZGNhc3QSEAoIdGFyZ2V0SWQYASABKAUSDgoGRGFtYWdlGAIgASgCEhIKCkF0",
            "dGFja2VySWQYAyABKAUitgEKDU1vbnN0ZXJTdGF0dXMSEQoJbW9uc3Rlcklk",
            "GAEgASgFEhMKC21vbnN0ZXJOYW1lGAIgASgJEgoKAkhQGAMgASgCEg0KBW1h",
            "eEhQGAQgASgCEhEKCW1vdmVTcGVlZBgFIAEoAhISCgpjaGFzZVJhbmdlGAYg",
            "ASgCEhMKC2F0dGFja1JhbmdlGAcgASgCEiYKB2F0dGFja3MYCCADKAsyFS5Q",
            "YWNrZXQuTW9uc3RlckF0dGFjayJHCg1Nb25zdGVyQXR0YWNrEhEKCWlucHV0",
            "VHlwZRgBIAEoBRIRCglmcmVxdWVuY3kYAiABKAUSEAoIYXR0YWNrSWQYAyAB",
            "KAUihwEKCldlYXBvbkRhdGESIAoEdHlwZRgBIAEoDjISLlBhY2tldC5XZWFw",
            "b25UeXBlEiYKCmF0dGFja1R5cGUYAiABKA4yEi5QYWNrZXQuQXR0YWNrVHlw",
            "ZRIOCgZkYW1hZ2UYAyABKAISDQoFcmFuZ2UYBCABKAISEAoIY29vbGRvd24Y",
            "BSABKAIqNgoKV2VhcG9uVHlwZRIICgRGaXN0EAASCQoFU3dvcmQQARIHCgNC",
            "b3cQZBIKCgVTdGFmZhDIASpGCgpBdHRhY2tUeXBlEgkKBXB1bmNoEAASCQoF",
            "U2xhc2gQZBIKCgVBcnJvdxDIARIKCgVUaHJvdxDJARIKCgVNYWdpYxCsAmIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Packet.WeaponType), typeof(global::Packet.AttackType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Packet.C_AttackRequest), global::Packet.C_AttackRequest.Parser, new[]{ "AttackerId", "PosX", "PosY", "PosZ", "DirY", "AttackId", "TimeStamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Packet.S_DamageBroadcast), global::Packet.S_DamageBroadcast.Parser, new[]{ "TargetId", "Damage", "AttackerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Packet.MonsterStatus), global::Packet.MonsterStatus.Parser, new[]{ "MonsterId", "MonsterName", "HP", "MaxHP", "MoveSpeed", "ChaseRange", "AttackRange", "Attacks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Packet.MonsterAttack), global::Packet.MonsterAttack.Parser, new[]{ "InputType", "Frequency", "AttackId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Packet.WeaponData), global::Packet.WeaponData.Parser, new[]{ "Type", "AttackType", "Damage", "Range", "Cooldown" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum WeaponType {
    [pbr::OriginalName("Fist")] Fist = 0,
    /// <summary>
    /// 근접무기 
    /// </summary>
    [pbr::OriginalName("Sword")] Sword = 1,
    /// <summary>
    /// 원거리 무기
    /// </summary>
    [pbr::OriginalName("Bow")] Bow = 100,
    /// <summary>
    /// 마법
    /// </summary>
    [pbr::OriginalName("Staff")] Staff = 200,
  }

  public enum AttackType {
    [pbr::OriginalName("punch")] Punch = 0,
    /// <summary>
    /// 근접 
    /// </summary>
    [pbr::OriginalName("Slash")] Slash = 100,
    /// <summary>
    /// 원거리
    /// </summary>
    [pbr::OriginalName("Arrow")] Arrow = 200,
    [pbr::OriginalName("Throw")] Throw = 201,
    /// <summary>
    /// 마법
    /// </summary>
    [pbr::OriginalName("Magic")] Magic = 300,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class C_AttackRequest : pb::IMessage<C_AttackRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<C_AttackRequest> _parser = new pb::MessageParser<C_AttackRequest>(() => new C_AttackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<C_AttackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Packet.CharacterAttackReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public C_AttackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public C_AttackRequest(C_AttackRequest other) : this() {
      attackerId_ = other.attackerId_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      posZ_ = other.posZ_;
      dirY_ = other.dirY_;
      attackId_ = other.attackId_;
      timeStamp_ = other.timeStamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public C_AttackRequest Clone() {
      return new C_AttackRequest(this);
    }

    /// <summary>Field number for the "AttackerId" field.</summary>
    public const int AttackerIdFieldNumber = 1;
    private int attackerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackerId {
      get { return attackerId_; }
      set {
        attackerId_ = value;
      }
    }

    /// <summary>Field number for the "PosX" field.</summary>
    public const int PosXFieldNumber = 2;
    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "PosY" field.</summary>
    public const int PosYFieldNumber = 3;
    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    /// <summary>Field number for the "PosZ" field.</summary>
    public const int PosZFieldNumber = 4;
    private float posZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PosZ {
      get { return posZ_; }
      set {
        posZ_ = value;
      }
    }

    /// <summary>Field number for the "DirY" field.</summary>
    public const int DirYFieldNumber = 5;
    private float dirY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DirY {
      get { return dirY_; }
      set {
        dirY_ = value;
      }
    }

    /// <summary>Field number for the "AttackId" field.</summary>
    public const int AttackIdFieldNumber = 6;
    private int attackId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackId {
      get { return attackId_; }
      set {
        attackId_ = value;
      }
    }

    /// <summary>Field number for the "TimeStamp" field.</summary>
    public const int TimeStampFieldNumber = 7;
    private float timeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TimeStamp {
      get { return timeStamp_; }
      set {
        timeStamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as C_AttackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(C_AttackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AttackerId != other.AttackerId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosZ, other.PosZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DirY, other.DirY)) return false;
      if (AttackId != other.AttackId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TimeStamp, other.TimeStamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AttackerId != 0) hash ^= AttackerId.GetHashCode();
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (PosZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosZ);
      if (DirY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DirY);
      if (AttackId != 0) hash ^= AttackId.GetHashCode();
      if (TimeStamp != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TimeStamp);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AttackerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AttackerId);
      }
      if (PosX != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PosY);
      }
      if (PosZ != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PosZ);
      }
      if (DirY != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(DirY);
      }
      if (AttackId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttackId);
      }
      if (TimeStamp != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(TimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AttackerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AttackerId);
      }
      if (PosX != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(PosY);
      }
      if (PosZ != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PosZ);
      }
      if (DirY != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(DirY);
      }
      if (AttackId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttackId);
      }
      if (TimeStamp != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(TimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AttackerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackerId);
      }
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (PosZ != 0F) {
        size += 1 + 4;
      }
      if (DirY != 0F) {
        size += 1 + 4;
      }
      if (AttackId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackId);
      }
      if (TimeStamp != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(C_AttackRequest other) {
      if (other == null) {
        return;
      }
      if (other.AttackerId != 0) {
        AttackerId = other.AttackerId;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      if (other.PosZ != 0F) {
        PosZ = other.PosZ;
      }
      if (other.DirY != 0F) {
        DirY = other.DirY;
      }
      if (other.AttackId != 0) {
        AttackId = other.AttackId;
      }
      if (other.TimeStamp != 0F) {
        TimeStamp = other.TimeStamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AttackerId = input.ReadInt32();
            break;
          }
          case 21: {
            PosX = input.ReadFloat();
            break;
          }
          case 29: {
            PosY = input.ReadFloat();
            break;
          }
          case 37: {
            PosZ = input.ReadFloat();
            break;
          }
          case 45: {
            DirY = input.ReadFloat();
            break;
          }
          case 48: {
            AttackId = input.ReadInt32();
            break;
          }
          case 61: {
            TimeStamp = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AttackerId = input.ReadInt32();
            break;
          }
          case 21: {
            PosX = input.ReadFloat();
            break;
          }
          case 29: {
            PosY = input.ReadFloat();
            break;
          }
          case 37: {
            PosZ = input.ReadFloat();
            break;
          }
          case 45: {
            DirY = input.ReadFloat();
            break;
          }
          case 48: {
            AttackId = input.ReadInt32();
            break;
          }
          case 61: {
            TimeStamp = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class S_DamageBroadcast : pb::IMessage<S_DamageBroadcast>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S_DamageBroadcast> _parser = new pb::MessageParser<S_DamageBroadcast>(() => new S_DamageBroadcast());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<S_DamageBroadcast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Packet.CharacterAttackReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S_DamageBroadcast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S_DamageBroadcast(S_DamageBroadcast other) : this() {
      targetId_ = other.targetId_;
      damage_ = other.damage_;
      attackerId_ = other.attackerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S_DamageBroadcast Clone() {
      return new S_DamageBroadcast(this);
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 1;
    private int targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }

    /// <summary>Field number for the "Damage" field.</summary>
    public const int DamageFieldNumber = 2;
    private float damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    /// <summary>Field number for the "AttackerId" field.</summary>
    public const int AttackerIdFieldNumber = 3;
    private int attackerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackerId {
      get { return attackerId_; }
      set {
        attackerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as S_DamageBroadcast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(S_DamageBroadcast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetId != other.TargetId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Damage, other.Damage)) return false;
      if (AttackerId != other.AttackerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetId != 0) hash ^= TargetId.GetHashCode();
      if (Damage != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Damage);
      if (AttackerId != 0) hash ^= AttackerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TargetId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TargetId);
      }
      if (Damage != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Damage);
      }
      if (AttackerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AttackerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TargetId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TargetId);
      }
      if (Damage != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Damage);
      }
      if (AttackerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AttackerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TargetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetId);
      }
      if (Damage != 0F) {
        size += 1 + 4;
      }
      if (AttackerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(S_DamageBroadcast other) {
      if (other == null) {
        return;
      }
      if (other.TargetId != 0) {
        TargetId = other.TargetId;
      }
      if (other.Damage != 0F) {
        Damage = other.Damage;
      }
      if (other.AttackerId != 0) {
        AttackerId = other.AttackerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetId = input.ReadInt32();
            break;
          }
          case 21: {
            Damage = input.ReadFloat();
            break;
          }
          case 24: {
            AttackerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TargetId = input.ReadInt32();
            break;
          }
          case 21: {
            Damage = input.ReadFloat();
            break;
          }
          case 24: {
            AttackerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MonsterStatus : pb::IMessage<MonsterStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonsterStatus> _parser = new pb::MessageParser<MonsterStatus>(() => new MonsterStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MonsterStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Packet.CharacterAttackReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterStatus(MonsterStatus other) : this() {
      monsterId_ = other.monsterId_;
      monsterName_ = other.monsterName_;
      hP_ = other.hP_;
      maxHP_ = other.maxHP_;
      moveSpeed_ = other.moveSpeed_;
      chaseRange_ = other.chaseRange_;
      attackRange_ = other.attackRange_;
      attacks_ = other.attacks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterStatus Clone() {
      return new MonsterStatus(this);
    }

    /// <summary>Field number for the "monsterId" field.</summary>
    public const int MonsterIdFieldNumber = 1;
    private int monsterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MonsterId {
      get { return monsterId_; }
      set {
        monsterId_ = value;
      }
    }

    /// <summary>Field number for the "monsterName" field.</summary>
    public const int MonsterNameFieldNumber = 2;
    private string monsterName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MonsterName {
      get { return monsterName_; }
      set {
        monsterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HP" field.</summary>
    public const int HPFieldNumber = 3;
    private float hP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HP {
      get { return hP_; }
      set {
        hP_ = value;
      }
    }

    /// <summary>Field number for the "maxHP" field.</summary>
    public const int MaxHPFieldNumber = 4;
    private float maxHP_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxHP {
      get { return maxHP_; }
      set {
        maxHP_ = value;
      }
    }

    /// <summary>Field number for the "moveSpeed" field.</summary>
    public const int MoveSpeedFieldNumber = 5;
    private float moveSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MoveSpeed {
      get { return moveSpeed_; }
      set {
        moveSpeed_ = value;
      }
    }

    /// <summary>Field number for the "chaseRange" field.</summary>
    public const int ChaseRangeFieldNumber = 6;
    private float chaseRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ChaseRange {
      get { return chaseRange_; }
      set {
        chaseRange_ = value;
      }
    }

    /// <summary>Field number for the "attackRange" field.</summary>
    public const int AttackRangeFieldNumber = 7;
    private float attackRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AttackRange {
      get { return attackRange_; }
      set {
        attackRange_ = value;
      }
    }

    /// <summary>Field number for the "attacks" field.</summary>
    public const int AttacksFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Packet.MonsterAttack> _repeated_attacks_codec
        = pb::FieldCodec.ForMessage(66, global::Packet.MonsterAttack.Parser);
    private readonly pbc::RepeatedField<global::Packet.MonsterAttack> attacks_ = new pbc::RepeatedField<global::Packet.MonsterAttack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Packet.MonsterAttack> Attacks {
      get { return attacks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MonsterStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MonsterStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MonsterId != other.MonsterId) return false;
      if (MonsterName != other.MonsterName) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HP, other.HP)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxHP, other.MaxHP)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MoveSpeed, other.MoveSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ChaseRange, other.ChaseRange)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AttackRange, other.AttackRange)) return false;
      if(!attacks_.Equals(other.attacks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MonsterId != 0) hash ^= MonsterId.GetHashCode();
      if (MonsterName.Length != 0) hash ^= MonsterName.GetHashCode();
      if (HP != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HP);
      if (MaxHP != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxHP);
      if (MoveSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MoveSpeed);
      if (ChaseRange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ChaseRange);
      if (AttackRange != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AttackRange);
      hash ^= attacks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MonsterId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MonsterId);
      }
      if (MonsterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MonsterName);
      }
      if (HP != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(HP);
      }
      if (MaxHP != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxHP);
      }
      if (MoveSpeed != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(MoveSpeed);
      }
      if (ChaseRange != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ChaseRange);
      }
      if (AttackRange != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(AttackRange);
      }
      attacks_.WriteTo(output, _repeated_attacks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MonsterId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MonsterId);
      }
      if (MonsterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MonsterName);
      }
      if (HP != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(HP);
      }
      if (MaxHP != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxHP);
      }
      if (MoveSpeed != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(MoveSpeed);
      }
      if (ChaseRange != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ChaseRange);
      }
      if (AttackRange != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(AttackRange);
      }
      attacks_.WriteTo(ref output, _repeated_attacks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MonsterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterId);
      }
      if (MonsterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MonsterName);
      }
      if (HP != 0F) {
        size += 1 + 4;
      }
      if (MaxHP != 0F) {
        size += 1 + 4;
      }
      if (MoveSpeed != 0F) {
        size += 1 + 4;
      }
      if (ChaseRange != 0F) {
        size += 1 + 4;
      }
      if (AttackRange != 0F) {
        size += 1 + 4;
      }
      size += attacks_.CalculateSize(_repeated_attacks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MonsterStatus other) {
      if (other == null) {
        return;
      }
      if (other.MonsterId != 0) {
        MonsterId = other.MonsterId;
      }
      if (other.MonsterName.Length != 0) {
        MonsterName = other.MonsterName;
      }
      if (other.HP != 0F) {
        HP = other.HP;
      }
      if (other.MaxHP != 0F) {
        MaxHP = other.MaxHP;
      }
      if (other.MoveSpeed != 0F) {
        MoveSpeed = other.MoveSpeed;
      }
      if (other.ChaseRange != 0F) {
        ChaseRange = other.ChaseRange;
      }
      if (other.AttackRange != 0F) {
        AttackRange = other.AttackRange;
      }
      attacks_.Add(other.attacks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 18: {
            MonsterName = input.ReadString();
            break;
          }
          case 29: {
            HP = input.ReadFloat();
            break;
          }
          case 37: {
            MaxHP = input.ReadFloat();
            break;
          }
          case 45: {
            MoveSpeed = input.ReadFloat();
            break;
          }
          case 53: {
            ChaseRange = input.ReadFloat();
            break;
          }
          case 61: {
            AttackRange = input.ReadFloat();
            break;
          }
          case 66: {
            attacks_.AddEntriesFrom(input, _repeated_attacks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 18: {
            MonsterName = input.ReadString();
            break;
          }
          case 29: {
            HP = input.ReadFloat();
            break;
          }
          case 37: {
            MaxHP = input.ReadFloat();
            break;
          }
          case 45: {
            MoveSpeed = input.ReadFloat();
            break;
          }
          case 53: {
            ChaseRange = input.ReadFloat();
            break;
          }
          case 61: {
            AttackRange = input.ReadFloat();
            break;
          }
          case 66: {
            attacks_.AddEntriesFrom(ref input, _repeated_attacks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MonsterAttack : pb::IMessage<MonsterAttack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonsterAttack> _parser = new pb::MessageParser<MonsterAttack>(() => new MonsterAttack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MonsterAttack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Packet.CharacterAttackReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterAttack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterAttack(MonsterAttack other) : this() {
      inputType_ = other.inputType_;
      frequency_ = other.frequency_;
      attackId_ = other.attackId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MonsterAttack Clone() {
      return new MonsterAttack(this);
    }

    /// <summary>Field number for the "inputType" field.</summary>
    public const int InputTypeFieldNumber = 1;
    private int inputType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InputType {
      get { return inputType_; }
      set {
        inputType_ = value;
      }
    }

    /// <summary>Field number for the "frequency" field.</summary>
    public const int FrequencyFieldNumber = 2;
    private int frequency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Frequency {
      get { return frequency_; }
      set {
        frequency_ = value;
      }
    }

    /// <summary>Field number for the "attackId" field.</summary>
    public const int AttackIdFieldNumber = 3;
    private int attackId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackId {
      get { return attackId_; }
      set {
        attackId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MonsterAttack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MonsterAttack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputType != other.InputType) return false;
      if (Frequency != other.Frequency) return false;
      if (AttackId != other.AttackId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InputType != 0) hash ^= InputType.GetHashCode();
      if (Frequency != 0) hash ^= Frequency.GetHashCode();
      if (AttackId != 0) hash ^= AttackId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InputType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InputType);
      }
      if (Frequency != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Frequency);
      }
      if (AttackId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AttackId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InputType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InputType);
      }
      if (Frequency != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Frequency);
      }
      if (AttackId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AttackId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InputType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputType);
      }
      if (Frequency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Frequency);
      }
      if (AttackId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MonsterAttack other) {
      if (other == null) {
        return;
      }
      if (other.InputType != 0) {
        InputType = other.InputType;
      }
      if (other.Frequency != 0) {
        Frequency = other.Frequency;
      }
      if (other.AttackId != 0) {
        AttackId = other.AttackId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputType = input.ReadInt32();
            break;
          }
          case 16: {
            Frequency = input.ReadInt32();
            break;
          }
          case 24: {
            AttackId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputType = input.ReadInt32();
            break;
          }
          case 16: {
            Frequency = input.ReadInt32();
            break;
          }
          case 24: {
            AttackId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WeaponData : pb::IMessage<WeaponData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WeaponData> _parser = new pb::MessageParser<WeaponData>(() => new WeaponData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WeaponData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Packet.CharacterAttackReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeaponData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeaponData(WeaponData other) : this() {
      type_ = other.type_;
      attackType_ = other.attackType_;
      damage_ = other.damage_;
      range_ = other.range_;
      cooldown_ = other.cooldown_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeaponData Clone() {
      return new WeaponData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Packet.WeaponType type_ = global::Packet.WeaponType.Fist;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Packet.WeaponType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "attackType" field.</summary>
    public const int AttackTypeFieldNumber = 2;
    private global::Packet.AttackType attackType_ = global::Packet.AttackType.Punch;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Packet.AttackType AttackType {
      get { return attackType_; }
      set {
        attackType_ = value;
      }
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 3;
    private float damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 4;
    private float range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "cooldown" field.</summary>
    public const int CooldownFieldNumber = 5;
    private float cooldown_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Cooldown {
      get { return cooldown_; }
      set {
        cooldown_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WeaponData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WeaponData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (AttackType != other.AttackType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Damage, other.Damage)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Range, other.Range)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Cooldown, other.Cooldown)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Packet.WeaponType.Fist) hash ^= Type.GetHashCode();
      if (AttackType != global::Packet.AttackType.Punch) hash ^= AttackType.GetHashCode();
      if (Damage != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Damage);
      if (Range != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Range);
      if (Cooldown != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Cooldown);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Packet.WeaponType.Fist) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (AttackType != global::Packet.AttackType.Punch) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AttackType);
      }
      if (Damage != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Damage);
      }
      if (Range != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Range);
      }
      if (Cooldown != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Cooldown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Packet.WeaponType.Fist) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (AttackType != global::Packet.AttackType.Punch) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AttackType);
      }
      if (Damage != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Damage);
      }
      if (Range != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Range);
      }
      if (Cooldown != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Cooldown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Packet.WeaponType.Fist) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (AttackType != global::Packet.AttackType.Punch) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AttackType);
      }
      if (Damage != 0F) {
        size += 1 + 4;
      }
      if (Range != 0F) {
        size += 1 + 4;
      }
      if (Cooldown != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WeaponData other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Packet.WeaponType.Fist) {
        Type = other.Type;
      }
      if (other.AttackType != global::Packet.AttackType.Punch) {
        AttackType = other.AttackType;
      }
      if (other.Damage != 0F) {
        Damage = other.Damage;
      }
      if (other.Range != 0F) {
        Range = other.Range;
      }
      if (other.Cooldown != 0F) {
        Cooldown = other.Cooldown;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Packet.WeaponType) input.ReadEnum();
            break;
          }
          case 16: {
            AttackType = (global::Packet.AttackType) input.ReadEnum();
            break;
          }
          case 29: {
            Damage = input.ReadFloat();
            break;
          }
          case 37: {
            Range = input.ReadFloat();
            break;
          }
          case 45: {
            Cooldown = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Packet.WeaponType) input.ReadEnum();
            break;
          }
          case 16: {
            AttackType = (global::Packet.AttackType) input.ReadEnum();
            break;
          }
          case 29: {
            Damage = input.ReadFloat();
            break;
          }
          case 37: {
            Range = input.ReadFloat();
            break;
          }
          case 45: {
            Cooldown = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
